---
# Source: fps-adot-collector/templates/adot-collector/serviceaccount.yaml
# Service account provides identity information for a user to be able to authenticate processes running in a pod.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: adot-collector-sa
  namespace: default
  labels:    
    helm.sh/chart: fps-adot-collector-0.21.0
    app.kubernetes.io/version: "0.35.0"
    app.kubernetes.io/component: opentelemetry
    app.kubernetes.io/managed-by: Helm
---
# Source: fps-adot-collector/templates/adot-collector/configmap.yaml
# ConfigMap for ADOT Collector as a DaemonSet with the specified configurations, including configured values from values.yaml.
apiVersion: v1
kind: ConfigMap
metadata:
  name: adot-daemonSet-conf
  namespace: default
  labels:
    app: opentelemetry
    component: adot-daemonSet-conf
    
    app.kubernetes.io/name: fps-adot-collector
    app.kubernetes.io/instance: adot
    helm.sh/chart: fps-adot-collector-0.21.0
    app.kubernetes.io/version: "0.35.0"
    app.kubernetes.io/component: opentelemetry
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: fps-adot-collector
data:
  adot-config:  |
    extensions: 
      health_check: [] 
      sigv4auth:
        region: us-gov-west-1
    receivers: 
      awscontainerinsightreceiver:
        add_full_pod_name_metric_label: null
        add_service_as_attribute: null
        collection_interval: null
        container_orchestrator: null
        prefer_full_pod_name: null
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
          - job_name: kong
            metric_relabel_configs:
            - action: replace
              regex: ^(\w+)\.(\w+)\.(\w+)-svc.8080$
              replacement: $3
              source_labels:
              - service
              target_label: application
            scrape_interval: 1m
      statsd:
        aggregation_interval: 60s
        enable_metric_type: true
        endpoint: 0.0.0.0:8125
    processors: 
      batch/metrics:
        timeout: 60s 
      batch/traces:
        timeout: 60s 
      k8sattributes/java:
        extract:
          labels:
          - from: pod
            key: app
            tag_name: application
          metadata:
          - k8s.pod.name
          - k8s.pod.uid
          - k8s.pod.start_time
          - k8s.deployment.name
          - k8s.namespace.name
          - k8s.node.name
        passthrough: false
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip 
      k8sattributes/kong:
        extract:
          labels:
          - from: pod
            key: app
            tag_name: application
          metadata:
          - k8s.pod.name
          - k8s.pod.uid
          - k8s.pod.start_time
          - k8s.deployment.name
          - k8s.namespace.name
          - k8s.node.name
        passthrough: false
        pod_association:
        - sources:
          - from: connection
    exporters: 
      awsemf/insights:
        dimension_rollup_option: NoDimensionRollup
        log_group_name: /aws/containerinsights/${EKS_CLUSTER_NAME}/performance
        log_stream_name: '{NodeName}'
        metric_declarations:
        - dimensions:
          - - NodeName
            - InstanceId
            - ClusterName
          metric_name_selectors:
          - node_cpu_utilization
          - node_memory_utilization
          - node_network_total_bytes
          - node_cpu_reserved_capacity
          - node_memory_reserved_capacity
          - node_number_of_running_pods
          - node_number_of_running_containers
        - dimensions:
          - - ClusterName
          metric_name_selectors:
          - node_cpu_utilization
          - node_memory_utilization
          - node_network_total_bytes
          - node_cpu_reserved_capacity
          - node_memory_reserved_capacity
          - node_number_of_running_pods
          - node_number_of_running_containers
          - node_cpu_usage_total
          - node_cpu_limit
          - node_memory_working_set
          - node_memory_limit
        - dimensions:
          - - PodName
            - Namespace
            - ClusterName
          - - Service
            - Namespace
            - ClusterName
          - - Namespace
            - ClusterName
          - - ClusterName
          metric_name_selectors:
          - pod_cpu_utilization
          - pod_memory_utilization
          - pod_network_rx_bytes
          - pod_network_tx_bytes
          - pod_cpu_utilization_over_pod_limit
          - pod_memory_utilization_over_pod_limit
        - dimensions:
          - - PodName
            - Namespace
            - ClusterName
          - - ClusterName
          metric_name_selectors:
          - pod_cpu_reserved_capacity
          - pod_memory_reserved_capacity
        - dimensions:
          - - PodName
            - Namespace
            - ClusterName
          metric_name_selectors:
          - pod_number_of_container_restarts
        - dimensions:
          - - ClusterName
          metric_name_selectors:
          - cluster_node_count
          - cluster_failed_node_count
        - dimensions:
          - - Service
            - Namespace
            - ClusterName
          - - ClusterName
          metric_name_selectors:
          - service_number_of_running_pods
        - dimensions:
          - - NodeName
            - InstanceId
            - ClusterName
          - - ClusterName
          metric_name_selectors:
          - node_filesystem_utilization
        - dimensions:
          - - Namespace
            - ClusterName
          - - ClusterName
          metric_name_selectors:
          - namespace_number_of_running_pods
        namespace: ContainerInsights
        parse_json_encoded_attr_values:
        - Sources
        - kubernetes
        region: us-gov-west-1
        resource_to_telemetry_conversion:
          enabled: true
      awsxray:
        aws_log_groups:
        - /aws/containerinsights/${EKS_CLUSTER_NAME}/application
        index_all_attributes: true
        telemetry:
          enabled: true
          include_metadata: true 
      awsemf/java:
        dimension_rollup_option: NoDimensionRollup
        log_group_name: /aws/containerinsights/${EKS_CLUSTER_NAME}/Java
        log_stream_name: '{NodeName}'
        metric_declarations:
        - dimensions:
          - - k8s.pod.name
            - application
            - k8s.namespace.name
            - k8s.cluster.name
            - processorType
          metric_name_selectors:
          - ^queueSize$
        - dimensions:
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - k8s.pod.name
          metric_name_selectors:
          - ^process.runtime.jvm.classes.loaded$
          - ^process.runtime.jvm.system.cpu.utilization$
          - ^process.runtime.jvm.cpu.utilization$
          - ^process.runtime.jvm.classes.current_loaded$
          - ^process.runtime.jvm.gc.duration$
          - ^process.runtime.jvm.system.cpu.load_1m$
          - ^process.runtime.jvm.classes.unloaded$
        - dimensions:
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - pool
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - k8s.pod.name
            - pool
            - type
          metric_name_selectors:
          - ^process.runtime.jvm.memory.committed$
          - ^process.runtime.jvm.memory.init$
          - ^process.runtime.jvm.memory.usage_after_last_gc$
          - ^process.runtime.jvm.memory.usage$
          - ^process.runtime.jvm.memory.limit$
        - dimensions:
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - pool
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - k8s.pod.name
            - pool
          metric_name_selectors:
          - ^process.runtime.jvm.buffer.count$
          - ^process.runtime.jvm.buffer.usage$
          - ^process.runtime.jvm.buffer.limit$
        - dimensions:
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - daemon
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - state
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - daemon
            - state
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - k8s.pod.name
            - daemon
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - k8s.pod.name
            - state
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - k8s.pod.name
            - daemon
            - state
          metric_name_selectors:
          - ^process.runtime.jvm.threads.count$
        - dimensions:
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - http.status_code
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - http.method
            - http.status_code
            - http.route
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - k8s.pod.name
            - http.method
            - http.status_code
            - http.route
          metric_name_selectors:
          - ^http.server.request.duration$
        - dimensions:
          - - k8s.cluster.name
            - k8s.namespace.name
            - pool.name
            - state
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - pool.name
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - k8s.pod.name
            - pool.name
          metric_name_selectors:
          - ^db.client.connections$
          - ^db.client.connections.idle.max$
          - ^db.client.connections.idle.min$
          - ^db.client.connections.max$
          - ^db.client.connections.pending_requests$
          - ^db.client.connections.timeouts$
          - ^db.client.connections.create_time$
          - ^db.client.connections.wait_time$
          - ^db.client.connections.use_time$
        - dimensions:
          - - k8s.cluster.name
            - k8s.namespace.name
            - pool.name
            - state
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - pool.name
            - state
          - - k8s.cluster.name
            - k8s.namespace.name
            - application
            - k8s.pod.name
            - pool.name
            - state
          metric_name_selectors:
          - ^db.client.connections.usage$
        namespace: ContainerInsights/Java
        region: us-gov-west-1
        resource_to_telemetry_conversion:
          enabled: true 
      awsemf/kong:
        dimension_rollup_option: NoDimensionRollup
        log_group_name: /aws/containerinsights/${EKS_CLUSTER_NAME}/Kong
        log_stream_name: '{NodeName}'
        metric_declarations:
        - dimensions:
          - - direction
          - - application
            - direction
          metric_name_selectors:
          - ^kong_bandwidth_bytes$
        - dimensions:
          - []
          metric_name_selectors:
          - ^kong_data_plane_cluster_cert_expiry_timestamp$
          - ^kong_datastore_reachable$
          - ^kong_enterprise_license_errors$
          - ^kong_enterprise_license_expiration$
          - ^kong_enterprise_license_features$
          - ^kong_enterprise_license_signature$
        - dimensions:
          - - application
            - code
            - source
          metric_name_selectors:
          - ^kong_http_requests_total$
        - dimensions:
          - - application
          metric_name_selectors:
          - ^kong_kong_latency_ms$
          - ^kong_request_latency_ms$
          - ^kong_upstream_latency_ms$
        - dimensions:
          - - kong_subsystem
            - shared_dict
          - - kong_subsystem
            - shared_dict
            - node_id
          metric_name_selectors:
          - ^kong_memory_lua_shared_dict_bytes$
          - ^kong_memory_lua_shared_dict_total_bytes$
        - dimensions:
          - - kong_subsystem
          - - kong_subsystem
            - node_id
          metric_name_selectors:
          - ^kong_memory_workers_lua_vms_bytes$
        - dimensions:
          - - subsystem
            - state
          - - subsystem
            - state
            - node_id
          metric_name_selectors:
          - ^kong_nginx_connections_total$
        - dimensions:
          - []
          metric_name_selectors:
          - ^kong_nginx_metric_errors_total$
        - dimensions:
          - - subsystem
          - - subsystem
            - node_id
          metric_name_selectors:
          - ^kong_nginx_requests_total$
        - dimensions:
          - - state
          metric_name_selectors:
          - ^kong_nginx_timers$
        - dimensions:
          - - upstream
            - subsystem
            - state
          metric_name_selectors:
          - ^kong_upstream_target_health$
        namespace: ContainerInsights/Kong
        region: us-gov-west-1
        resource_to_telemetry_conversion:
          enabled: true
        
    service:
      pipelines: 
        metrics/insights:
          exporters:
          - awsemf/insights
          processors:
          - batch/metrics
          receivers:
          - awscontainerinsightreceiver 
        metrics/java:
          exporters:
          - awsemf/java
          processors:
          - batch/metrics
          - k8sattributes/java
          receivers:
          - otlp 
        metrics/kong:
          exporters:
          - awsemf/kong
          processors:
          - batch/metrics
          - k8sattributes/kong
          receivers:
          - statsd 
        traces/java:
          exporters:
          - awsxray
          processors:
          - batch/traces
          - k8sattributes/java
          receivers:
          - otlp 
        traces/kong:
          exporters:
          - awsxray
          processors:
          - batch/traces
          - k8sattributes/kong
          receivers:
          - otlp
      extensions:
      - health_check
      - sigv4auth
---
# Source: fps-adot-collector/templates/adot-collector/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: adot-deployment-conf
  namespace: default
  labels:
    app: opentelemetry
    component: adot-deployment-conf
    
    app.kubernetes.io/name: fps-adot-collector
    app.kubernetes.io/instance: adot
    helm.sh/chart: fps-adot-collector-0.21.0
    app.kubernetes.io/version: "0.35.0"
    app.kubernetes.io/component: opentelemetry
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: fps-adot-collector
data:
  adot-config:  |
    extensions: 
      health_check: [] 
      sigv4auth:
        region: us-gov-west-1
    receivers: 
      config:
        scrape_configs:
        - job_name: kong
          metric_relabel_configs:
          - action: replace
            regex: ^(\w+)\.(\w+)\.(\w+)-svc.8080$
            replacement: $3
            source_labels:
            - service
            target_label: application
          scrape_interval: 1m
    processors: 
      batch/metrics:
        timeout: 60s
    exporters: 
      awsemf/kong:
        dimension_rollup_option: NoDimensionRollup
        log_group_name: /aws/containerinsights/${EKS_CLUSTER_NAME}/Kong
        log_stream_name: '{NodeName}'
        metric_declarations:
        - dimensions:
          - - direction
          - - application
            - direction
          metric_name_selectors:
          - ^kong_bandwidth_bytes$
        - dimensions:
          - []
          metric_name_selectors:
          - ^kong_data_plane_cluster_cert_expiry_timestamp$
          - ^kong_datastore_reachable$
          - ^kong_enterprise_license_errors$
          - ^kong_enterprise_license_expiration$
          - ^kong_enterprise_license_features$
          - ^kong_enterprise_license_signature$
        - dimensions:
          - - application
            - code
            - source
          metric_name_selectors:
          - ^kong_http_requests_total$
        - dimensions:
          - - application
          metric_name_selectors:
          - ^kong_kong_latency_ms$
          - ^kong_request_latency_ms$
          - ^kong_upstream_latency_ms$
        - dimensions:
          - - kong_subsystem
            - shared_dict
          - - kong_subsystem
            - shared_dict
            - node_id
          metric_name_selectors:
          - ^kong_memory_lua_shared_dict_bytes$
          - ^kong_memory_lua_shared_dict_total_bytes$
        - dimensions:
          - - kong_subsystem
          - - kong_subsystem
            - node_id
          metric_name_selectors:
          - ^kong_memory_workers_lua_vms_bytes$
        - dimensions:
          - - subsystem
            - state
          - - subsystem
            - state
            - node_id
          metric_name_selectors:
          - ^kong_nginx_connections_total$
        - dimensions:
          - []
          metric_name_selectors:
          - ^kong_nginx_metric_errors_total$
        - dimensions:
          - - subsystem
          - - subsystem
            - node_id
          metric_name_selectors:
          - ^kong_nginx_requests_total$
        - dimensions:
          - - state
          metric_name_selectors:
          - ^kong_nginx_timers$
        - dimensions:
          - - upstream
            - subsystem
            - state
          metric_name_selectors:
          - ^kong_upstream_target_health$
        namespace: ContainerInsights/Kong
        region: us-gov-west-1
        resource_to_telemetry_conversion:
          enabled: true
        
    service:
      pipelines: 
        metrics/kong:
          exporters:
          - awsemf/kong
          processors:
          - batch/metrics
          receivers:
          - prometheus/kong
      extensions:
      - health_check
      - sigv4auth
---
# Source: fps-adot-collector/templates/adot-collector/clusterrole.yaml
# ClusterRole for ADOT Collector as a DaemonSet contains rules, and defines and grants permissions to specified resources/endpoints.
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: adot-collector-role
  labels:    
    helm.sh/chart: fps-adot-collector-0.21.0
    app.kubernetes.io/version: "0.35.0"
    app.kubernetes.io/component: opentelemetry
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["pods", "nodes", "endpoints", "namespaces"]
    verbs: ["list", "watch"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["list", "watch"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources: ["nodes/proxy"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["nodes/stats", "configmaps", "events"]
    verbs: ["create", "get"]
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["adot-container-insight-clusterleader", "otel-container-insight-clusterleader"]
    verbs: ["get","update"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    resourceNames: ["otel-container-insight-clusterleader"]
    verbs: ["get", "update", "create"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "create"]
---
# Source: fps-adot-collector/templates/adot-collector/clusterrolebinding.yaml
# ClusterRoleBinding for ADOT Collector as a DaemonSet references and grants permissions defined in ClusterRole to service accounts/users/groups in subjects.
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: adot-collector-role-binding
  labels:    
    helm.sh/chart: fps-adot-collector-0.21.0
    app.kubernetes.io/version: "0.35.0"
    app.kubernetes.io/component: opentelemetry
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: adot-collector-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: adot-collector-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: fps-adot-collector/templates/adot-collector/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: adot-collector-service
  namespace: default
  labels:    
    app.kubernetes.io/name: fps-adot-collector
    app.kubernetes.io/instance: adot
    helm.sh/chart: fps-adot-collector-0.21.0
    app.kubernetes.io/version: "0.35.0"
    app.kubernetes.io/component: opentelemetry
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: fps-adot-collector
spec:
    type: ClusterIP
    ports:
    - name: otlp-gprc
      port: 4317
      protocol: TCP
      targetPort: 4317
    - name: otlp-http
      port: 4318
      protocol: TCP
      targetPort: 4318
    - name: statsd
      port: 8125
      protocol: UDP
      targetPort: 8125
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    selector:      
      app.kubernetes.io/name: fps-adot-collector
      app.kubernetes.io/instance: adot
---
# Source: fps-adot-collector/templates/adot-collector/daemonset.yaml
# ADOT Collector as a DaemonSet for deployment.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: adot-collector-daemonSet
  namespace: default
  labels:    
    app.kubernetes.io/name: fps-adot-collector
    app.kubernetes.io/instance: adot
    helm.sh/chart: fps-adot-collector-0.21.0
    app.kubernetes.io/version: "0.35.0"
    app.kubernetes.io/component: opentelemetry
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: fps-adot-collector
spec:
  selector:
    matchLabels:
      name: adot-collector-daemonSet      
      app.kubernetes.io/name: fps-adot-collector
      app.kubernetes.io/instance: adot
  template:
    metadata:
      labels:
        name: adot-collector-daemonSet        
        app.kubernetes.io/name: fps-adot-collector
        app.kubernetes.io/instance: adot
        helm.sh/chart: fps-adot-collector-0.21.0
        app.kubernetes.io/version: "0.35.0"
        app.kubernetes.io/component: opentelemetry
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: fps-adot-collector
      annotations:
        rollme: "XKdHW"
    spec:
      containers:
        - name: adot-collector-container
          image: "093737011827.dkr.ecr.us-gov-west-1.amazonaws.com/fps-docker/aws-otel-collector:v0.35.0"
          imagePullPolicy: Always
          env:
            - name: EKS_CLUSTER_NAME
              value: NGDC-FPS-EKS-cluster
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /awscollector
            - --config=/conf/adot-daemonSet-config.yaml
          volumeMounts:
            - mountPath: /rootfs
              name: rootfs
              readOnly: true
            - mountPath: /var/run/docker.sock
              name: dockersock
              readOnly: true
            - mountPath: /var/lib/docker
              name: varlibdocker
              readOnly: true
            - mountPath: /run/containerd/containerd.sock
              name: containerdsock
              readOnly: true
            - mountPath: /sys
              name: sys
              readOnly: true
            - mountPath: /dev/disk
              name: devdisk
              readOnly: true
            - mountPath: /conf
              name: adot-daemonSet-config-vol
          securityContext:
            runAsGroup: 0
            runAsUser: 0
          resources:
            limits:
              cpu: "4"
              memory: 8Gi
            requests:
              cpu: "2"
              memory: 6Gi
          ports:
            - containerPort: 4317
              hostPort: 4317
              name: otlp-gprc
              protocol: TCP
      volumes:
          - configMap:
              items:
              - key: adot-daemonSet-config
                path: adot-daemonSet-config.yaml
              name: adot-daemonSet-conf
            name: adot-daemonSet-config-vol
          - hostPath:
              path: /
            name: rootfs
          - hostPath:
              path: /var/run/docker.sock
            name: dockersock
          - hostPath:
              path: /var/lib/docker
            name: varlibdocker
          - hostPath:
              path: /run/containerd/containerd.sock
            name: containerdsock
          - hostPath:
              path: /sys
            name: sys
          - hostPath:
              path: /dev/disk/
            name: devdisk
      serviceAccountName: adot-collector-sa
      tolerations:
        []
---
# Source: fps-adot-collector/templates/adot-collector/deployment.yaml
# ADOT Collector as a deployment for deployment.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adot-collector-deployment
  namespace: default
  labels:    
    app.kubernetes.io/name: fps-adot-collector
    app.kubernetes.io/instance: adot
    helm.sh/chart: fps-adot-collector-0.21.0
    app.kubernetes.io/version: "0.35.0"
    app.kubernetes.io/component: opentelemetry
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: fps-adot-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      name: adot-collector-deployment      
      app.kubernetes.io/name: fps-adot-collector
      app.kubernetes.io/instance: adot
  template:
    metadata:
      labels:
        name: adot-collector-deployment        
        app.kubernetes.io/name: fps-adot-collector
        app.kubernetes.io/instance: adot
        helm.sh/chart: fps-adot-collector-0.21.0
        app.kubernetes.io/version: "0.35.0"
        app.kubernetes.io/component: opentelemetry
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: fps-adot-collector
      annotations:
        rollme: "n3O7K"
    spec:
      containers:
        - name: adot-collector-container
          image: "093737011827.dkr.ecr.us-gov-west-1.amazonaws.com/fps-docker/aws-otel-collector:v0.35.0"
          imagePullPolicy: Always
          env:
            - name: EKS_CLUSTER_NAME
              value: NGDC-FPS-EKS-cluster
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /awscollector
            - --config=/conf/adot-deployment-config.yaml
          volumeMounts:
            - mountPath: /rootfs
              name: rootfs
              readOnly: true
            - mountPath: /var/run/docker.sock
              name: dockersock
              readOnly: true
            - mountPath: /var/lib/docker
              name: varlibdocker
              readOnly: true
            - mountPath: /run/containerd/containerd.sock
              name: containerdsock
              readOnly: true
            - mountPath: /sys
              name: sys
              readOnly: true
            - mountPath: /dev/disk
              name: devdisk
              readOnly: true
            - mountPath: /conf
              name: adot-config-vol
          securityContext:
            runAsGroup: 0
            runAsUser: 0
          resources:
            limits:
              cpu: "4"
              memory: 8Gi
            requests:
              cpu: "2"
              memory: 6Gi
      volumes:
          - configMap:
              items:
              - key: adot-deployment-config
                path: adot-demployment-config.yaml
              name: adot-deployment-conf
            name: adot-deployment-config-vol
          - hostPath:
              path: /
            name: rootfs
          - hostPath:
              path: /var/run/docker.sock
            name: dockersock
          - hostPath:
              path: /var/lib/docker
            name: varlibdocker
          - hostPath:
              path: /run/containerd/containerd.sock
            name: containerdsock
          - hostPath:
              path: /sys
            name: sys
          - hostPath:
              path: /dev/disk/
            name: devdisk
      serviceAccountName: adot-collector-sa
      tolerations:
        []
